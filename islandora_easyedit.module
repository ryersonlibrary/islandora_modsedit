<?php
/**
 * @file
 * Defines all the hooks this module implements.
 */
/**
 * Implements hook_menu().
 */
function islandora_easyedit_menu() {
  return array(
    'islandora/object/%islandora_object/edit_mods' => array(
      'title' => 'Edit MODS',
      'type' => MENU_LOCAL_TASK,
      'page callback' => 'islandora_modsedit_view',
      'page arguments' => array(2),
      'access callback' => 'islandora_modsedit_access_callback',
      'access arguments' => array(2),
    ),
    'islandora/object/%islandora_object/regenerate_derivatives' => array(
      'title' => 'Regenerate',
      'type' => MENU_LOCAL_TASK,
      'page callback' => 'islandora_regenerate_view',
      'page arguments' => array(2),
      'access callback' => 'islandora_regenerate_access_callback',
      'access arguments' => array(2),
     
    ),
  );
}
function islandora_easyedit_permission() {
  return array(
    'view mods edit' => array(
      'title' => t('View MODS edit'),
      'description' => t('Allow whether or not the MODS edit button will appear'),
    ),
    
  );
}
/**
 * Access callback.
 *
 * Requires that the given object contains a MODS datastream (and to be
 * viewable, as per the stock permissions).
 *
 * @param AbstractObject $object
 *   The object to test, if NULL the given object doesn't exist or is
 *   inaccessible.
 *
 * @return bool
 *   TRUE if the user is allowed to access the marcxml interface, FALSE
 *   otherwise.
 */
function islandora_modsedit_access_callback($object) {
  return is_object($object) && isset($object['MODS']) && islandora_datastream_access(ISLANDORA_VIEW_OBJECTS, $object['MODS'])
    && user_access('view mods edit');
}
function islandora_modsedit_view(AbstractObject $object) {
	drupal_goto("islandora/object/{$object->id}/datastream/MODS/edit");
}



/**
 * Access callback.
 */
function islandora_regenerate_access_callback($object) {
  return is_object($object) && islandora_object_access(ISLANDORA_REGENERATE_DERIVATIVES, $object);
}

function islandora_regenerate_view(AbstractObject $object) {
	drupal_goto("islandora/object/{$object->id}/manage/datastreams/locking/lock", array('query' => array('destination' => 'islandora/object/{$object->id}/regenerate')));
}

